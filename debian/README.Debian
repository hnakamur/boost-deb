Help Save the World
-------------------

Boost is a fairly extensive set of libraries, of which I personally
use but a very small part.  I greatly appreciate folks that send
patches to the BTS.  Please do have a look at the outstanding bug
reports and send me hints or patches if you have extra information.


Getting Started
---------------

The following table shows which components use a library (shared or
static) and the corresponding "-l" flag.  Note that only the 
multithreaded version of the libraries is shipped.

  Component              Link Flag                    Library Type
  ---------              ---------                    ------------
  Boost.Date_Time        -lboost_date_time-mt         	static  shared
  Boost.Filesystem       -lboost_filesystem-mt        	static  shared
  Boost.Graph            -lboost_graph-mt             	static  shared
  Boost.IOStreams        -lboost_iostreams-mt         	static  shared
  Boost.Math		 -lboost_math_c99-mt          	static  shared
  			 -lboost_math_c99f-mt         	static  shared
  			 -lboost_math_c99l-mt         	static  shared
  Boost.MPI		 -lboost_mpi-mt		      	static  shared
  Boost.Program_options  -lboost_program_options-mt   	static  shared
  Boost.Python           -lboost_python-mt-py24       	static  shared
  			 -lboost_python-mt-py25       	static  shared
  Boost.Regex            -lboost_regex-mt             	static  shared
  Boost.Serialization    -lboost_serialization-mt     	static  shared
                         -lboost_wserialization-mt    	static  shared
  Boost.Signals          -lboost_signals-mt           	static  shared
  Boost.System		 -lboost_system-mt	      	static  shared
  Boost.Test             -lboost_prg_exec_monitor-mt  	static  shared
                         -lboost_unit_test_framework-mt	static  shared
  Boost.Thread           -lboost_thread-mt            	static  shared
  Boost.Wave             -lboost_wave-mt		static  shared


Most of Boost is installed using the package libboostX.Y-dev.
The components with a shared library have separate -dev packages.

There is extensive documentation available in the libboostX.Y-doc
package and at www.boost.org.


Example Code
------------

All example code is shipped in libboostX.Y-doc package.

Some of the example code is linked to by the documentation, and thus
appears in a directory named

  /usr/share/doc/libboostX.Y-doc/HTML/libs/*/example

Example code that is not linked from the documentation appears in a
directory under

  /usr/share/doc/libboostX.Y-doc/examples/libs/


Use of boost/nondet_random.hpp
------------------------------

The use of this header file is subject to the availability of class
boost::random_device::impl. Boost libraries provide only an example
implementation which the user may use to fit her needs.

Such implementation is distributed by libboostX.Y-dev Debian package
in file /usr/share/doc/libboostX.Y-dev/examples/random_device.cpp. 
This file is generally good enough for most linux users.  Simply 
copy and modify to suit your needs.


 -- Steve M. Robbins <smr@debian.org>, Mon, 16 Feb 2009 15:53:46 z
